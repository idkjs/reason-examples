// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Vec3$RayTracer = require("./Vec3.bs.js");
var Sphere$RayTracer = require("./Sphere.bs.js");

function hit(world, ray, tMin, tMax) {
  var closestSoFar = /* record */[/* contents */tMax];
  var _acc = undefined;
  var _input = world[/* spheres */0];
  while(true) {
    var input = _input;
    var acc = _acc;
    if (input) {
      var t = input[1];
      var hitRec = Sphere$RayTracer.hit(input[0], ray, tMin, closestSoFar[0]);
      if (hitRec !== undefined) {
        var x = hitRec;
        closestSoFar[0] = x[/* t */0];
        _input = t;
        _acc = x;
        continue ;
      } else {
        _input = t;
        continue ;
      }
    } else {
      return acc;
    }
  };
}

function makeRandomSpheres(param) {
  var theSpheres = /* [] */0;
  for(var a = -5; a <= 5; ++a){
    for(var b = -5; b <= 5; ++b){
      var center = Vec3$RayTracer.make(a + 0.9 + Math.random(), 0.2, b + 0.9 + Math.random());
      if (Vec3$RayTracer.length(Vec3$RayTracer.sub(center, Vec3$RayTracer.make(4.0, 0.2, 0.0))) > 0.9) {
        var chooseMat = Math.random();
        var material = chooseMat < 0.8 ? /* LambertianMaterial */Block.__(0, [Vec3$RayTracer.make(Math.random() * Math.random(), Math.random() * Math.random(), Math.random() * Math.random())]) : /* MetalMaterial */Block.__(1, [
              Vec3$RayTracer.make(0.5 * (1.0 + Math.random()), 0.5 * (1.0 + Math.random()), 0.5 * (1.0 + Math.random())),
              0.5 * Math.random()
            ]);
        var s = Sphere$RayTracer.make(center, 0.2, material);
        theSpheres = /* :: */[
          s,
          theSpheres
        ];
      }
      
    }
  }
  return theSpheres;
}

var randomSpheres = makeRandomSpheres(/* () */0);

var spheresInScene_000 = Sphere$RayTracer.make(Vec3$RayTracer.make(0.0, -1000.0, 0.0), 1000.0, /* LambertianMaterial */Block.__(0, [Vec3$RayTracer.make(0.5, 0.5, 0.5)]));

var spheresInScene_001 = /* :: */[
  Sphere$RayTracer.make(Vec3$RayTracer.make(4.0, 1.0, 0.0), 1.0, /* MetalMaterial */Block.__(1, [
          Vec3$RayTracer.make(0.7, 0.6, 0.5),
          0.0
        ])),
  /* :: */[
    Sphere$RayTracer.make(Vec3$RayTracer.make(0.0, 1.0, 1.5), 1.0, /* LambertianMaterial */Block.__(0, [Vec3$RayTracer.make(0.4, 0.2, 0.1)])),
    randomSpheres
  ]
];

var spheresInScene = /* :: */[
  spheresInScene_000,
  spheresInScene_001
];

function make(param) {
  return /* record */[/* spheres */spheresInScene];
}

exports.hit = hit;
exports.makeRandomSpheres = makeRandomSpheres;
exports.randomSpheres = randomSpheres;
exports.spheresInScene = spheresInScene;
exports.make = make;
/* randomSpheres Not a pure module */
