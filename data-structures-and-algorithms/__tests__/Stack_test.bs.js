// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Stack$ReasonExamples = require("../src/data-structures/Stack.bs.js");

Jest.describe("make", (function (param) {
        return Jest.test("toBe", (function (param) {
                      return Jest.Expect[/* toBe */2](/* [] */0, Jest.Expect[/* expect */0](Stack$ReasonExamples.make(/* () */0)));
                    }));
      }));

Jest.describe("push and peek", (function (param) {
        return Jest.test("push and peek", (function (param) {
                      return Jest.Expect[/* toEqual */12](3, Jest.Expect[/* expect */0](Stack$ReasonExamples.peek(Stack$ReasonExamples.push(3, Stack$ReasonExamples.push(2, Stack$ReasonExamples.make(/* () */0))))));
                    }));
      }));

Jest.describe("pop", (function (param) {
        return Jest.test("pop", (function (param) {
                      var match = Stack$ReasonExamples.pop(Stack$ReasonExamples.push(3, Stack$ReasonExamples.push(2, Stack$ReasonExamples.make(/* () */0))));
                      return Jest.Expect[/* toEqual */12](3, Jest.Expect[/* expect */0](match[0]));
                    }));
      }));

Jest.describe("is_empty", (function (param) {
        return Jest.test("returns true if empty", (function (param) {
                      return Jest.Expect[/* toBe */2](true, Jest.Expect[/* expect */0](Stack$ReasonExamples.is_empty(Stack$ReasonExamples.make(/* () */0))));
                    }));
      }));

Jest.describe("is_empty", (function (param) {
        return Jest.test("returns true if not empty", (function (param) {
                      return Jest.Expect[/* toBe */2](false, Jest.Expect[/* expect */0](Stack$ReasonExamples.is_empty(Stack$ReasonExamples.push(55, Stack$ReasonExamples.make(/* () */0)))));
                    }));
      }));

var a = "";

exports.a = a;
/*  Not a pure module */
