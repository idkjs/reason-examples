// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Ray$RayTracer = require("./Ray.bs.js");
var Vec3$RayTracer = require("./Vec3.bs.js");
var SphereUtils$RayTracer = require("./SphereUtils.bs.js");

function reflect(v, n) {
  var a = Vec3$RayTracer.mul(n, Vec3$RayTracer.dot(v, n) * 2.0);
  return Vec3$RayTracer.sub(v, a);
}

function scatter(rayIn, hitNormal, hitP, albedo, fuzziness) {
  var match = fuzziness > 1.0;
  var fuzz = match ? 1.0 : fuzziness;
  var reflected = reflect(Vec3$RayTracer.unitVector(rayIn[/* direction */1]), hitNormal);
  var scattered = Ray$RayTracer.make(hitP, Vec3$RayTracer.add(reflected, Vec3$RayTracer.mul(SphereUtils$RayTracer.randomVectorInUnitSphere(/* () */0), fuzz)));
  if (Vec3$RayTracer.dot(scattered[/* direction */1], hitNormal) > 0.0) {
    return /* tuple */[
            albedo,
            scattered
          ];
  }
  
}

exports.reflect = reflect;
exports.scatter = scatter;
/* No side effect */
